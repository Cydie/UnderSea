// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnderSea.DAL.Context;

namespace UnderSea.DAL.Migrations
{
    [DbContext(typeof(UnderSeaDbContext))]
    [Migration("20200709074247_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnderSea.DAL.Models.Attack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttackerUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DefenderUserId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackerUserId");

                    b.HasIndex("DefenderUserId");

                    b.HasIndex("GameId");

                    b.HasIndex("UnitGroupId");

                    b.ToTable("Attack");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuildingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("CoralBonus")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PopulationBonus")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("UnderConstructionCount")
                        .HasColumnType("bit");

                    b.Property<int>("UnitStorage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingGroupId");

                    b.ToTable("Buildings");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Building");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.BuildingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("BuildingGroup");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmyId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingTimeLeft")
                        .HasColumnType("int");

                    b.Property<int>("Coral")
                        .HasColumnType("int");

                    b.Property<int>("CoralProduction")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pearl")
                        .HasColumnType("int");

                    b.Property<int>("PearlProduction")
                        .HasColumnType("int");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TaxRate")
                        .HasColumnType("int");

                    b.Property<int>("UnitStorage")
                        .HasColumnType("int");

                    b.Property<int>("UpgradeTimeLeft")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmyId");

                    b.HasIndex("BuildingGroupId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AttackScore")
                        .HasColumnType("float");

                    b.Property<int>("CoralCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<double>("DefenseScore")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PearlCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("UnitGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnitGroupId");

                    b.ToTable("Unit");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Unit");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.UnitGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("UnitGroup");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.Upgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttackAndDefenseBonusPercentage")
                        .HasColumnType("int");

                    b.Property<int>("AttackBonusPercentage")
                        .HasColumnType("int");

                    b.Property<int>("CoralProductionBonusPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("DefenseBonusPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PearlProductionBonusPercentage")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Upgrade");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Upgrade");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("GameId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.FlowManager", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Buildings.Building");

                    b.HasDiscriminator().HasValue("FlowManager");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.ReefCastle", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Buildings.Building");

                    b.HasDiscriminator().HasValue("ReefCastle");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.CombatSeaHorse", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Units.Unit");

                    b.HasDiscriminator().HasValue("CombatSeaHorse");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.LaserShark", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Units.Unit");

                    b.HasDiscriminator().HasValue("LaserShark");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.StormSeal", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Units.Unit");

                    b.HasDiscriminator().HasValue("StormSeal");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.Alchemy", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Upgrades.Upgrade");

                    b.HasDiscriminator().HasValue("Alchemy");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.CoralWall", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Upgrades.Upgrade");

                    b.HasDiscriminator().HasValue("CoralWall");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.MudHarvester", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Upgrades.Upgrade");

                    b.HasDiscriminator().HasValue("MudHarvester");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.MudTractor", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Upgrades.Upgrade");

                    b.HasDiscriminator().HasValue("MudTractor");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.SonarCannon", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Upgrades.Upgrade");

                    b.HasDiscriminator().HasValue("SonarCannon");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.UnderwaterMartialArts", b =>
                {
                    b.HasBaseType("UnderSea.DAL.Models.Upgrades.Upgrade");

                    b.HasDiscriminator().HasValue("UnderwaterMartialArts");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Attack", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.User", "AttackerUser")
                        .WithMany()
                        .HasForeignKey("AttackerUserId");

                    b.HasOne("UnderSea.DAL.Models.User", "DefenderUser")
                        .WithMany()
                        .HasForeignKey("DefenderUserId");

                    b.HasOne("UnderSea.DAL.Models.Game", null)
                        .WithMany("Attacks")
                        .HasForeignKey("GameId");

                    b.HasOne("UnderSea.DAL.Models.Units.UnitGroup", "UnitGroup")
                        .WithMany()
                        .HasForeignKey("UnitGroupId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.Building", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Buildings.BuildingGroup", null)
                        .WithMany("Buildings")
                        .HasForeignKey("BuildingGroupId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Country", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Units.UnitGroup", "Army")
                        .WithMany()
                        .HasForeignKey("ArmyId");

                    b.HasOne("UnderSea.DAL.Models.Buildings.BuildingGroup", "BuildingGroup")
                        .WithMany()
                        .HasForeignKey("BuildingGroupId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.Unit", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Units.UnitGroup", null)
                        .WithMany("Units")
                        .HasForeignKey("UnitGroupId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrades.Upgrade", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Country", null)
                        .WithMany("Upgrades")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.User", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("UnderSea.DAL.Models.Game", null)
                        .WithMany("Users")
                        .HasForeignKey("GameId");
                });
#pragma warning restore 612, 618
        }
    }
}
