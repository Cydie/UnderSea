// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnderSea.DAL.Context;

namespace UnderSea.DAL.Migrations
{
    [DbContext(typeof(UnderSeaDbContext))]
    partial class UnderSeaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnderSea.DAL.Models.Attack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttackerUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DefenderUserId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttackerUserId");

                    b.HasIndex("DefenderUserId");

                    b.HasIndex("GameId");

                    b.HasIndex("UnitGroupId");

                    b.ToTable("Attack");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.BuildingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingState")
                        .HasColumnType("int");

                    b.Property<int?>("FlowManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ReefCastleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlowManagerId");

                    b.HasIndex("ReefCastleId");

                    b.ToTable("BuildingGroup");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.FlowManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoralBonus")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("PopulationBonus")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("UnitStorage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FlowManager");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.ReefCastle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoralBonus")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("PopulationBonus")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("UnitStorage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReefCastle");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmyId")
                        .HasColumnType("int");

                    b.Property<int?>("BuildingGroupId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingTimeLeft")
                        .HasColumnType("int");

                    b.Property<int>("Coral")
                        .HasColumnType("int");

                    b.Property<int>("CoralProduction")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pearl")
                        .HasColumnType("int");

                    b.Property<int>("PearlProduction")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UpgradeTimeLeft")
                        .HasColumnType("int");

                    b.Property<int?>("UpgradesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArmyId");

                    b.HasIndex("BuildingGroupId");

                    b.HasIndex("UpgradesId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.CombatSeaHorse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AttackScore")
                        .HasColumnType("float");

                    b.Property<int>("CoralCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<double>("DefenseScore")
                        .HasColumnType("float");

                    b.Property<int>("PearlCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CombatSeaHorse");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.LaserShark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AttackScore")
                        .HasColumnType("float");

                    b.Property<int>("CoralCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<double>("DefenseScore")
                        .HasColumnType("float");

                    b.Property<int>("PearlCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LaserShark");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.StormSeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AttackScore")
                        .HasColumnType("float");

                    b.Property<int>("CoralCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<double>("DefenseScore")
                        .HasColumnType("float");

                    b.Property<int>("PearlCostPerTurn")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StormSeal");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.UnitGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CombatSeaHorseId")
                        .HasColumnType("int");

                    b.Property<int?>("LaserSharkId")
                        .HasColumnType("int");

                    b.Property<int?>("StormSealId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CombatSeaHorseId");

                    b.HasIndex("LaserSharkId");

                    b.HasIndex("StormSealId");

                    b.ToTable("UnitGroup");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Upgrade.Upgrades", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Alchemy")
                        .HasColumnType("int");

                    b.Property<int>("CoralWall")
                        .HasColumnType("int");

                    b.Property<int>("MudHarvester")
                        .HasColumnType("int");

                    b.Property<int>("MudTractor")
                        .HasColumnType("int");

                    b.Property<int>("SonarCannon")
                        .HasColumnType("int");

                    b.Property<int>("UnderwaterMartialArts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Upgrades");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("GameId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Attack", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.User", "AttackerUser")
                        .WithMany()
                        .HasForeignKey("AttackerUserId");

                    b.HasOne("UnderSea.DAL.Models.User", "DefenderUser")
                        .WithMany()
                        .HasForeignKey("DefenderUserId");

                    b.HasOne("UnderSea.DAL.Models.Game", null)
                        .WithMany("Attacks")
                        .HasForeignKey("GameId");

                    b.HasOne("UnderSea.DAL.Models.Units.UnitGroup", "UnitGroup")
                        .WithMany()
                        .HasForeignKey("UnitGroupId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Buildings.BuildingGroup", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Buildings.FlowManager", "FlowManager")
                        .WithMany()
                        .HasForeignKey("FlowManagerId");

                    b.HasOne("UnderSea.DAL.Models.Buildings.ReefCastle", "ReefCastle")
                        .WithMany()
                        .HasForeignKey("ReefCastleId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Country", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Units.UnitGroup", "Army")
                        .WithMany()
                        .HasForeignKey("ArmyId");

                    b.HasOne("UnderSea.DAL.Models.Buildings.BuildingGroup", "BuildingGroup")
                        .WithMany()
                        .HasForeignKey("BuildingGroupId");

                    b.HasOne("UnderSea.DAL.Models.Upgrade.Upgrades", "Upgrades")
                        .WithMany()
                        .HasForeignKey("UpgradesId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.Units.UnitGroup", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Units.CombatSeaHorse", "CombatSeaHorse")
                        .WithMany()
                        .HasForeignKey("CombatSeaHorseId");

                    b.HasOne("UnderSea.DAL.Models.Units.LaserShark", "LaserShark")
                        .WithMany()
                        .HasForeignKey("LaserSharkId");

                    b.HasOne("UnderSea.DAL.Models.Units.StormSeal", "StormSeal")
                        .WithMany()
                        .HasForeignKey("StormSealId");
                });

            modelBuilder.Entity("UnderSea.DAL.Models.User", b =>
                {
                    b.HasOne("UnderSea.DAL.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("UnderSea.DAL.Models.Game", null)
                        .WithMany("Users")
                        .HasForeignKey("GameId");
                });
#pragma warning restore 612, 618
        }
    }
}
